:orphan:



.. _sphx_glr_auto_openfpga:

OpenFPGA Related Restructuring
------------------------------

.. raw:: html

    <div class="sphx-glr-clear"></div>



.. _sphx_glr_auto_openfpga_basic:

.. _sec:basic_examples:

Basic Examples  
===============

A collection of examples introduces the functionality and features, SpyDrNet-Physical library.
 


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates the OpenFPGA_Arch class which parses the  VPR and OpenFPGA Architectu...">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_01_fpga_arch_parse_thumb.png
     :alt: OpenFPGA Architecture Parsing

     :ref:`sphx_glr_auto_openfpga_basic_01_fpga_arch_parse.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/01_fpga_arch_parse

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstates, how to render primitive FPGA elements using yosys  and `netlistSVG &lt;h...">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_02_fpga_basic_elements_thumb.png
     :alt: Render FPGA Basic Elements

     :ref:`sphx_glr_auto_openfpga_basic_02_fpga_basic_elements.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/02_fpga_basic_elements

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstate how to render FPGA Tile using FloorPlanViz class User can provide exter...">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_03_initial_placement_thumb.png
     :alt: Render Placement information from Verilog netlist

     :ref:`sphx_glr_auto_openfpga_basic_03_initial_placement.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/03_initial_placement

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This class generates the 2D matrix of the FPGA grid.">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_04_fpga_grid_generation_thumb.png
     :alt: FPGA Layout grid generation

     :ref:`sphx_glr_auto_openfpga_basic_04_fpga_grid_generation.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/04_fpga_grid_generation

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="FPGA Instance to Layout mapping">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_05_fpga_instance_name_thumb.png
     :alt: FPGA Instance to Layout mapping

     :ref:`sphx_glr_auto_openfpga_basic_05_fpga_instance_name.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/05_fpga_instance_name

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstate how to render FPGA Tile using FloorPlanViz class User can provide exter...">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_06_FloorplanDesign01_thumb.png
     :alt: Render Placement information from Verilog netlist

     :ref:`sphx_glr_auto_openfpga_basic_06_FloorplanDesign01.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/06_FloorplanDesign01

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstate how to render FPGA Tile using FloorPlanViz class User can provide exter...">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_07_FloorplanHeterogeneousDesign01_thumb.png
     :alt: Render Placement information from Verilog netlist

     :ref:`sphx_glr_auto_openfpga_basic_07_FloorplanHeterogeneousDesign01.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/07_FloorplanHeterogeneousDesign01

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demostrates how the grided floorplan is generated using  GridFloorplanGen class ">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_08_grid_floor_plan_example_thumb.png
     :alt: Grid Floorplan Generator

     :ref:`sphx_glr_auto_openfpga_basic_08_grid_floor_plan_example.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/08_grid_floor_plan_example

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Demonstrates how to rename FPGA modules">

.. only:: html

 .. figure:: /auto_openfpga/basic/images/thumb/sphx_glr_rename_modules_thumb.png
     :alt: Renaming Homogeneous FPGA Modules

     :ref:`sphx_glr_auto_openfpga_basic_rename_modules.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/basic/rename_modules
.. raw:: html

    <div class="sphx-glr-clear"></div>



.. _sphx_glr_auto_openfpga_clock_tree:

.. _sec:clock_tree_embedding:

Clock Tree Embedding
=====================

A collection of examples to introduce the functionality, 
features, and uses of SpyDrNet.



.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate how to genrate different connection pattern for routing global signals...">

.. only:: html

 .. figure:: /auto_openfpga/clock_tree/images/thumb/sphx_glr_01_connection_patterns_thumb.png
     :alt: Connection Pattern Generation

     :ref:`sphx_glr_auto_openfpga_clock_tree_01_connection_patterns.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/clock_tree/01_connection_patterns

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate how to genrate different connection pattern for routing global signals...">

.. only:: html

 .. figure:: /auto_openfpga/clock_tree/images/thumb/sphx_glr_02_create_htree_thumb.png
     :alt: Create H-Tree Connectivity pattern

     :ref:`sphx_glr_auto_openfpga_clock_tree_02_create_htree.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/clock_tree/02_create_htree

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demostrate how to create hybrid connetivity pattern for any  arbitrary (non square...">

.. only:: html

 .. figure:: /auto_openfpga/clock_tree/images/thumb/sphx_glr_03_create_htree_thumb.png
     :alt: Create Hybrid Connectivity Pattern

     :ref:`sphx_glr_auto_openfpga_clock_tree_03_create_htree.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/clock_tree/03_create_htree

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip=" .. hdl-diagram:: ../../../../examples/OpenFPGA/clock_tree/_square_grid_design.v    :type: netl...">

.. only:: html

 .. figure:: /auto_openfpga/clock_tree/images/thumb/sphx_glr_04_create_clock_tree_thumb.png
     :alt: Create Clock Tree Embedding

     :ref:`sphx_glr_auto_openfpga_clock_tree_04_create_clock_tree.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/clock_tree/04_create_clock_tree

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates how to insert H-Tree in tileable FPGA grid.">

.. only:: html

 .. figure:: /auto_openfpga/clock_tree/images/thumb/sphx_glr_05_clock_tree_insertion_thumb.png
     :alt: Two layer H-Tree insertion in 4x4 FPGA

     :ref:`sphx_glr_auto_openfpga_clock_tree_05_clock_tree_insertion.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/clock_tree/05_clock_tree_insertion

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Create Reset Feedthrough in fpga_top">

.. only:: html

 .. figure:: /auto_openfpga/clock_tree/images/thumb/sphx_glr_06_reset_feedthrough_thumb.png
     :alt: Create Reset Feedthrough in fpga_top

     :ref:`sphx_glr_auto_openfpga_clock_tree_06_reset_feedthrough.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/clock_tree/06_reset_feedthrough
.. raw:: html

    <div class="sphx-glr-clear"></div>



.. _sphx_glr_auto_openfpga_rendering:

.. _sec:rendering:

Module Rendering Examples 
=========================

A collection of examples to introduce the functionality, features, and uses of SpyDrNet.





.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip=" .. include:: ../../../../spydrnet_physical/util/get_floorplan.py     :start-after: &quot;&quot;&quot;     :en...">

.. only:: html

 .. figure:: /auto_openfpga/rendering/images/thumb/sphx_glr_01_floorplan_rendering_thumb.png
     :alt: Demonstrate how to render basic floorplan

     :ref:`sphx_glr_auto_openfpga_rendering_01_floorplan_rendering.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/rendering/01_floorplan_rendering

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demostrate how a switch box (SB) and connection box (CB) can be rendered in a SVG ...">

.. only:: html

 .. figure:: /auto_openfpga/rendering/images/thumb/sphx_glr_02_render_routing_box_thumb.png
     :alt: Rendering Switch and Connection Boxes

     :ref:`sphx_glr_auto_openfpga_rendering_02_render_routing_box.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/rendering/02_render_routing_box

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demostrate how a switch box (SB) and connection box (CB) can be rendered in a SVG ...">

.. only:: html

 .. figure:: /auto_openfpga/rendering/images/thumb/sphx_glr_03_render_edge_routing_box_thumb.png
     :alt: Rendering Switch and Connection Boxes

     :ref:`sphx_glr_auto_openfpga_rendering_03_render_edge_routing_box.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/rendering/03_render_edge_routing_box
.. raw:: html

    <div class="sphx-glr-clear"></div>



.. _sphx_glr_auto_openfpga_partition:

.. _sec:partitions:

Partition Examples 
===================

A collection of examples to introduce the functionality, features, and uses of SpyDrNet.





.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate how to convert a netlist to a netowrkx graph.">

.. only:: html

 .. figure:: /auto_openfpga/partition/images/thumb/sphx_glr_01_netlist_to_graph_thumb.png
     :alt: Netlist to graph (networkx)

     :ref:`sphx_glr_auto_openfpga_partition_01_netlist_to_graph.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/partition/01_netlist_to_graph

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate how pre-tech mapped netlist of connection box  can be partition based ...">

.. only:: html

 .. figure:: /auto_openfpga/partition/images/thumb/sphx_glr_02_switch_partition_01_thumb.png
     :alt: Partition Conn Box 01

     :ref:`sphx_glr_auto_openfpga_partition_02_switch_partition_01.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/partition/02_switch_partition_01

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate, how a techmapped connection box can be split into  two parts.">

.. only:: html

 .. figure:: /auto_openfpga/partition/images/thumb/sphx_glr_03_switch_partition_02_thumb.png
     :alt: Partition Conn Box 02

     :ref:`sphx_glr_auto_openfpga_partition_03_switch_partition_02.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/partition/03_switch_partition_02

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This is simplified script Partition Conn Box 02">

.. only:: html

 .. figure:: /auto_openfpga/partition/images/thumb/sphx_glr_04_switch_partition_03_thumb.png
     :alt: Partition Conn Box 02 - Simplified

     :ref:`sphx_glr_auto_openfpga_partition_04_switch_partition_03.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/partition/04_switch_partition_03

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Given two set of channels, split all the CBs and SBs in the design  This script expects externa...">

.. only:: html

 .. figure:: /auto_openfpga/partition/images/thumb/sphx_glr_05_module_partition_thumb.png
     :alt: Split CBs and SBs across fabric

     :ref:`sphx_glr_auto_openfpga_partition_05_module_partition.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/partition/05_module_partition

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstate how to create a tile strcuture from Verilog netlist obtained from OpenF...">

.. only:: html

 .. figure:: /auto_openfpga/partition/images/thumb/sphx_glr_06_tile_creation_thumb.png
     :alt: FPGA Tiles from OpenFPGA Verilog

     :ref:`sphx_glr_auto_openfpga_partition_06_tile_creation.py`

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga/partition/06_tile_creation
.. raw:: html

    <div class="sphx-glr-clear"></div>



.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-gallery


  .. container:: sphx-glr-download sphx-glr-download-python

    :download:`Download all examples in Python source code: auto_openfpga_python.zip </auto_openfpga/auto_openfpga_python.zip>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

    :download:`Download all examples in Jupyter notebooks: auto_openfpga_jupyter.zip </auto_openfpga/auto_openfpga_jupyter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
