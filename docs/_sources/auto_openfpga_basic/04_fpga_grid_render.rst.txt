
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_openfpga_basic/04_fpga_grid_render.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_openfpga_basic_04_fpga_grid_render.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_openfpga_basic_04_fpga_grid_render.py:


==============================
RenderFPGA Pre Generation Grid
==============================

This class generates the 2D matrix of the FPGA grid.


**layout section of Architecture file**

.. image:: ../../../examples/OpenFPGA_basic/_small_layout_render.svg
   :width: 60%
   :align: center

.. image:: ../../../examples/OpenFPGA_basic/_ultimate_layout_render.svg
   :width: 90%
   :align: center

.. GENERATED FROM PYTHON SOURCE LINES 20-58

.. code-block:: default


    import logging

    import spydrnet as sdn
    from spydrnet_physical.util import FPGAGridGen

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(LOG_LEVEL='INFO')


    def main():
        fpga = FPGAGridGen(design_name="example_design",
                           arch_file="./support_files/vpr_arch_render_demo.xml",
                           release_root="_release",
                           layout="small")
        fpga.enumerate_grid()

        dwg = fpga.render_layout(filename="_small_layout_render.svg")

        fpga = FPGAGridGen(design_name="example_design",
                           arch_file="./support_files/vpr_arch_render_demo.xml",
                           release_root="_release",
                           layout="ultimate")
        fpga.enumerate_grid()
        dwg = fpga.render_layout(filename="_ultimate_layout_render.svg")

        fpga.get_instance("cbx_1__0_")["xlink:href"][1:]
        fpga.get_symbol_of_instance("cbx_1__0_")
        fpga.get_symbol("ram9k")
        fpga.add_style("symbol[id='ram9k'] * { fill:#a8dd00;}")
        print("-----")
        # Need Some more effforts
        fpga.merge_symbol(["cbx_1__0_", "clb_1__1_"], "new_symbol")
        dwg.save(pretty=True, indent=4)


    if __name__ == "__main__":
        main()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_openfpga_basic_04_fpga_grid_render.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 04_fpga_grid_render.py <04_fpga_grid_render.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 04_fpga_grid_render.ipynb <04_fpga_grid_render.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
