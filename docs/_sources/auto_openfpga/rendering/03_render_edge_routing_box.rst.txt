
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_openfpga/rendering/03_render_edge_routing_box.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_openfpga_rendering_03_render_edge_routing_box.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_openfpga_rendering_03_render_edge_routing_box.py:


=====================================
Rendering Switch and Connection Boxes
=====================================

This example demostrate how a switch box (SB) and connection box (CB)
can be rendered in a SVG format.

.. GENERATED FROM PYTHON SOURCE LINES 10-70

.. code-block:: default


    import glob
    import os
    import logging
    import numpy as np

    import spydrnet as sdn
    from spydrnet_physical.util import cb_renderer, sb_renderer

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(LOG_LEVEL='DEBUG')

    scale = 50
    SPACING = 150

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(
        LOG_LEVEL='DEBUG', filename="03_render_edge_routing_box")

    np.set_printoptions(linewidth=200)


    def main():
        gsb = '../homogeneous_fabric/FPGA44_gsb'

        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        #  This prints horizontal connection box information
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        for indx, conn_box in enumerate(glob.glob(f'{gsb}/cbx_*__*_.xml')):
            module = os.path.splitext(os.path.basename(conn_box))[0]
            cb_render = cb_renderer(module, conn_box)
            print(f"Printing module : ========== {module} ========== ")
            cb_render.report_ipins()

        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        #  This prints vertical connection box information
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        for indx, conn_box in enumerate(glob.glob(f'{gsb}/cby_*__*_.xml')):
            module = os.path.splitext(os.path.basename(conn_box))[0]
            cb_render = cb_renderer(module, conn_box)
            print(f"Printing module : ========== {module} ========== ")
            cb_render.report_ipins()

        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        #  This prints switch box information
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        for indx, conn_box in enumerate(glob.glob(f'{gsb}/sb_*__*_.xml')):
            module = os.path.splitext(os.path.basename(conn_box))[0]
            print(f"Printing module : ========== {module} ========== ")
            sb_render = sb_renderer(module, conn_box)
            sb_render.report_connectivity(filter_direct=True,
                                          in_pin=["chanx_left", "chanx_right",
                                                  "chany_top", "chany_bottom"])
            sb_render.report_connectivity(filter_direct=True,
                                          in_pin=["opin_left", "opin_right",
                                                  "opin_top", "opin_bottom"])


    if __name__ == "__main__":
        main()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_openfpga_rendering_03_render_edge_routing_box.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 03_render_edge_routing_box.py <03_render_edge_routing_box.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 03_render_edge_routing_box.ipynb <03_render_edge_routing_box.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
