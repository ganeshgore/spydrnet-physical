
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_openfpga/basic/05_fpga_instance_name.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_openfpga_basic_05_fpga_instance_name.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_openfpga_basic_05_fpga_instance_name.py:


================================
FPGA Instance to Layout mapping 
================================

.. GENERATED FROM PYTHON SOURCE LINES 7-50




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    sb_0_4    cbx_1_4   sb_1_4    cbx_2_4   sb_2_4    cbx_3_4   sb_3_4    cbx_4_4   sb_4_4    
    cby_0_4   clb_1__4_ cby_1_4   clb_2__4_ cby_2_4   clb_3__4_ cby_3_4   clb_4__4_ cby_4_4   
    sb_0_3    cbx_1_3   sb_1_3    cbx_2_3   sb_2_3    cbx_3_3   sb_3_3    cbx_4_3   sb_4_3    
    cby_0_3   clb_1__3_ cby_1_3   clb_2__3_ cby_2_3   clb_3__3_ cby_3_3   clb_4__3_ cby_4_3   
    sb_0_2    cbx_1_2   sb_1_2    cbx_2_2   sb_2_2    cbx_3_2   sb_3_2    cbx_4_2   sb_4_2    
    cby_0_2   clb_1__2_ cby_1_2   clb_2__2_ cby_2_2   clb_3__2_ cby_3_2   clb_4__2_ cby_4_2   
    sb_0_1    cbx_1_1   sb_1_1    cbx_2_1   sb_2_1    cbx_3_1   sb_3_1    cbx_4_1   sb_4_1    
    cby_0_1   clb_1__1_ cby_1_1   clb_2__1_ cby_2_1   clb_3__1_ cby_3_1   clb_4__1_ cby_4_1   
    sb_0_0    cbx_1_0   sb_1_0    cbx_2_0   sb_2_0    cbx_3_0   sb_3_0    cbx_4_0   sb_4_0    






|

.. code-block:: default


    import glob
    import logging
    import tempfile

    import spydrnet as sdn
    from spydrnet_physical.util import OpenFPGA, FPGAGridGen

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(LOG_LEVEL='INFO')


    def main():
        proj = "../homogeneous_fabric"
        source_files = glob.glob(f'{proj}/*_Verilog/lb/*.v')
        source_files += glob.glob(f'{proj}/*_Verilog/routing/*.v')
        source_files += glob.glob(f'{proj}/*_Verilog/sub_module/*.v')
        source_files += glob.glob(f'{proj}/*_Verilog/fpga_top.v')

        # Temporary fix to read multiple verilog files
        with tempfile.NamedTemporaryFile(suffix=".v") as fp:
            for eachV in source_files:
                with open(eachV, "r") as fpv:
                    fp.write(str.encode(" ".join(fpv.readlines())))
            fp.seek(0)
            netlist = sdn.parse(fp.name)

        fpga = OpenFPGA(grid=(4, 4), netlist=netlist)

        fpga_grid = FPGAGridGen(design_name='FPGA4x4', layout="4x4",
                                arch_file=f"{proj}/FPGA44_Task/arch/k6_N10_tileable.xml",
                                release_root=None)
        fpga_grid.enumerate_grid()
        fpga.load_grid(fpga_grid)

        for y in range(9, 0, -1):
            for x in range(1, 9+1):
                print(f"{fpga.get_top_instance(x, y):10}", end="")
            print("")


    if __name__ == "__main__":
        main()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.691 seconds)


.. _sphx_glr_download_auto_openfpga_basic_05_fpga_instance_name.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 05_fpga_instance_name.py <05_fpga_instance_name.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 05_fpga_instance_name.ipynb <05_fpga_instance_name.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
