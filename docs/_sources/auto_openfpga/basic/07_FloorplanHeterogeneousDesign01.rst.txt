
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_openfpga/basic/07_FloorplanHeterogeneousDesign01.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_openfpga_basic_07_FloorplanHeterogeneousDesign01.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_openfpga_basic_07_FloorplanHeterogeneousDesign01.py:


=================================================
Render Placement information from Verilog netlist
=================================================

This example demonstate how to render FPGA Tile using ``FloorPlanViz`` class
User can provide external script to render tiles, by default the rendering is
based on ``initial_placement`` class.

This script can be used for shaping and placement of the modules before place and route.

.. image:: ../../../../examples/OpenFPGA/basic/_hetero_design_floorplan.svg
   :width: 70%
   :align: center

.. GENERATED FROM PYTHON SOURCE LINES 17-224




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    = = = = = = = = = = = = = = = = = = = = 
    = = = = = =  DESIGN STATS = = = = = = = 
    = = = = = = = = = = = = = = = = = = = = 
        top_module : fpga_top
        definitions: 31
        instances  : 273
    = = = = = = = = = = = = = = = = = = = = 
              References    count
    - - - - - - - - - - - - - - - - - - - - 
               cbx_1__0_        6
               cbx_1__1_       42
               cbx_1__8_        6
               cbx_2__0_        2
               cbx_2__2_        6
               cbx_2__8_        2
               cby_0__1_        8
               cby_1__1_       16
               cby_2__1_        8
               cby_3__1_       32
               cby_8__1_        8
                grid_clb       48
             grid_mult_8        8
                sb_0__0_        1
                sb_0__1_        7
                sb_0__8_        1
                sb_1__0_        2
                sb_1__1_        8
                sb_1__2_        6
                sb_1__8_        2
                sb_2__0_        1
                sb_2__1_        4
                sb_2__2_        3
                sb_2__8_        1
                sb_3__0_        4
                sb_3__1_       28
                sb_3__8_        4
                sb_8__0_        1
                sb_8__1_        4
                sb_8__2_        3
                sb_8__8_        1
    cbx_1__0_ {'W': 100, 'H': 60}
    cbx_1__1_ {'W': 100, 'H': 60}
    cbx_1__8_ {'W': 100, 'H': 60}
    cbx_2__0_ {'W': 100, 'H': 60}
    cbx_2__2_ {'W': 100, 'H': 60}
    cbx_2__8_ {'W': 100, 'H': 60}
    cby_0__1_ {'W': 60, 'H': 100}
    cby_1__1_ {'W': 60, 'H': 100}
    cby_2__1_ {'W': 60, 'H': 100}
    cby_3__1_ {'W': 60, 'H': 100}
    cby_8__1_ {'W': 60, 'H': 100}
    grid_clb {'W': 140, 'H': 140}
    grid_mult_8 {'W': 140, 'H': 340}
    sb_0__0_ {'SHAPE': 'cross', 'POINTS': [60, 0, 20.0, 60, 20.0, 0]}
    sb_0__1_ {'SHAPE': 'cross', 'POINTS': [60, 0, 20.0, 60, 20.0, 20.0]}
    sb_0__8_ {'SHAPE': 'cross', 'POINTS': [60, 0, 0, 60, 20.0, 20.0]}
    sb_1__0_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 20.0, 0]}
    sb_1__1_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 0, 20.0]}
    sb_1__2_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 20.0, 20.0]}
    sb_1__8_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 0, 60, 20.0, 20.0]}
    sb_2__0_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 20.0, 0]}
    sb_2__1_ {'SHAPE': 'cross', 'POINTS': [60, 0, 20.0, 60, 20.0, 20.0]}
    sb_2__2_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 20.0, 20.0]}
    sb_2__8_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 0, 60, 20.0, 20.0]}
    sb_3__0_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 20.0, 0]}
    sb_3__1_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 20.0, 20.0]}
    sb_3__8_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 0, 60, 20.0, 20.0]}
    sb_8__0_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 0, 0]}
    sb_8__1_ {'SHAPE': 'cross', 'POINTS': [60, 0, 20.0, 60, 0, 20.0]}
    sb_8__2_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 20.0, 60, 0, 20.0]}
    sb_8__8_ {'SHAPE': 'cross', 'POINTS': [60, 20.0, 0, 60, 0, 20.0]}
      EMPTY        io         io         io         io         io         io         io         io       EMPTY    
        io        clb         ↑         clb        clb        clb        clb        clb         ↑          io     
        io        clb       mult_8      clb        clb        clb        clb        clb       mult_8       io     
        io        clb         ↑         clb        clb        clb        clb        clb         ↑          io     
        io        clb       mult_8      clb        clb        clb        clb        clb       mult_8       io     
        io        clb         ↑         clb        clb        clb        clb        clb         ↑          io     
        io        clb       mult_8      clb        clb        clb        clb        clb       mult_8       io     
        io        clb         ↑         clb        clb        clb        clb        clb         ↑          io     
        io        clb       mult_8      clb        clb        clb        clb        clb       mult_8       io     
      EMPTY        io         io         io         io         io         io         io         io       EMPTY    
     = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
                INSTANCE               MODULE LOC_X LOC_Y WIDTH HEIGHT    SHAPE               POINTS
     = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
          grid_clb_1__1_             grid_clb   160   160   140   140       -- 
          grid_clb_1__2_             grid_clb   160   360   140   140       -- 
          grid_clb_1__3_             grid_clb   160   560   140   140       -- 
          grid_clb_1__4_             grid_clb   160   760   140   140       -- 
          grid_clb_1__5_             grid_clb   160   960   140   140       -- 
          grid_clb_1__6_             grid_clb   160  1160   140   140       -- 
          grid_clb_1__7_             grid_clb   160  1360   140   140       -- 
          grid_clb_1__8_             grid_clb   160  1560   140   140       -- 
          grid_clb_3__1_             grid_clb   560   160   140   140       -- 
          grid_clb_3__2_             grid_clb   560   360   140   140       -- 
          grid_clb_3__3_             grid_clb   560   560   140   140       -- 
          grid_clb_3__4_             grid_clb   560   760   140   140       -- 
          grid_clb_3__5_             grid_clb   560   960   140   140       -- 
          grid_clb_3__6_             grid_clb   560  1160   140   140       -- 
          grid_clb_3__7_             grid_clb   560  1360   140   140       -- 
          grid_clb_3__8_             grid_clb   560  1560   140   140       -- 
          grid_clb_4__1_             grid_clb   760   160   140   140       -- 
          grid_clb_4__2_             grid_clb   760   360   140   140       -- 
          grid_clb_4__3_             grid_clb   760   560   140   140       -- 
          grid_clb_4__4_             grid_clb   760   760   140   140       -- 
          grid_clb_4__5_             grid_clb   760   960   140   140       -- 
          grid_clb_4__6_             grid_clb   760  1160   140   140       -- 
          grid_clb_4__7_             grid_clb   760  1360   140   140       -- 
          grid_clb_4__8_             grid_clb   760  1560   140   140       -- 
          grid_clb_5__1_             grid_clb   960   160   140   140       -- 
          grid_clb_5__2_             grid_clb   960   360   140   140       -- 
          grid_clb_5__3_             grid_clb   960   560   140   140       -- 
          grid_clb_5__4_             grid_clb   960   760   140   140       -- 
          grid_clb_5__5_             grid_clb   960   960   140   140       -- 
          grid_clb_5__6_             grid_clb   960  1160   140   140       -- 
          grid_clb_5__7_             grid_clb   960  1360   140   140       -- 
          grid_clb_5__8_             grid_clb   960  1560   140   140       -- 
          grid_clb_6__1_             grid_clb  1160   160   140   140       -- 
          grid_clb_6__2_             grid_clb  1160   360   140   140       -- 
          grid_clb_6__3_             grid_clb  1160   560   140   140       -- 
          grid_clb_6__4_             grid_clb  1160   760   140   140       -- 
          grid_clb_6__5_             grid_clb  1160   960   140   140       -- 
          grid_clb_6__6_             grid_clb  1160  1160   140   140       -- 
          grid_clb_6__7_             grid_clb  1160  1360   140   140       -- 
          grid_clb_6__8_             grid_clb  1160  1560   140   140       -- 
          grid_clb_7__1_             grid_clb  1360   160   140   140       -- 
          grid_clb_7__2_             grid_clb  1360   360   140   140       -- 
          grid_clb_7__3_             grid_clb  1360   560   140   140       -- 
          grid_clb_7__4_             grid_clb  1360   760   140   140       -- 
          grid_clb_7__5_             grid_clb  1360   960   140   140       -- 
          grid_clb_7__6_             grid_clb  1360  1160   140   140       -- 
          grid_clb_7__7_             grid_clb  1360  1360   140   140       -- 
          grid_clb_7__8_             grid_clb  1360  1560   140   140       -- 
       grid_mult_8_2__1_          grid_mult_8   360   160   140   340       -- 
       grid_mult_8_2__3_          grid_mult_8   360   560   140   340       -- 
       grid_mult_8_2__5_          grid_mult_8   360   960   140   340       -- 
       grid_mult_8_2__7_          grid_mult_8   360  1360   140   340       -- 
       grid_mult_8_8__1_          grid_mult_8  1560   160   140   340       -- 
       grid_mult_8_8__3_          grid_mult_8  1560   560   140   340       -- 
       grid_mult_8_8__5_          grid_mult_8  1560   960   140   340       -- 
       grid_mult_8_8__7_          grid_mult_8  1560  1360   140   340       -- 
                sb_0__0_             sb_0__0_   100   100    50    50    cross 
                sb_0__1_             sb_0__1_   100   280    50    50    cross 
                sb_0__2_             sb_0__1_   100   480    50    50    cross 
                sb_0__3_             sb_0__1_   100   680    50    50    cross 
                sb_0__4_             sb_0__1_   100   880    50    50    cross 
                sb_0__5_             sb_0__1_   100  1080    50    50    cross 
                sb_0__6_             sb_0__1_   100  1280    50    50    cross 
                sb_0__7_             sb_0__1_   100  1480    50    50    cross 
                sb_0__8_             sb_0__8_   100  1680    50    50    cross 
                sb_1__0_             sb_1__0_   280   100    50    50    cross 
                sb_7__0_             sb_1__0_  1480   100    50    50    cross 
                sb_1__1_             sb_1__1_   280   280    50    50    cross 
                sb_1__3_             sb_1__1_   280   680    50    50    cross 
                sb_1__5_             sb_1__1_   280  1080    50    50    cross 
                sb_1__7_             sb_1__1_   280  1480    50    50    cross 
                sb_7__1_             sb_1__1_  1480   280    50    50    cross 
                sb_7__3_             sb_1__1_  1480   680    50    50    cross 
                sb_7__5_             sb_1__1_  1480  1080    50    50    cross 
                sb_7__7_             sb_1__1_  1480  1480    50    50    cross 
                sb_1__2_             sb_1__2_   280   480    50    50    cross 
                sb_1__4_             sb_1__2_   280   880    50    50    cross 
                sb_1__6_             sb_1__2_   280  1280    50    50    cross 
                sb_7__2_             sb_1__2_  1480   480    50    50    cross 
                sb_7__4_             sb_1__2_  1480   880    50    50    cross 
                sb_7__6_             sb_1__2_  1480  1280    50    50    cross 
                sb_1__8_             sb_1__8_   280  1680    50    50    cross 
                sb_7__8_             sb_1__8_  1480  1680    50    50    cross 
                sb_2__0_             sb_2__0_   480   100    50    50    cross 
                sb_2__1_             sb_2__1_   500   280    50    50    cross 
                sb_2__3_             sb_2__1_   500   680    50    50    cross 
                sb_2__5_             sb_2__1_   500  1080    50    50    cross 
                sb_2__7_             sb_2__1_   500  1480    50    50    cross 
                sb_2__2_             sb_2__2_   480   480    50    50    cross 
                sb_2__4_             sb_2__2_   480   880    50    50    cross 
                sb_2__6_             sb_2__2_   480  1280    50    50    cross 
                sb_2__8_             sb_2__8_   480  1680    50    50    cross 
                sb_3__0_             sb_3__0_   680   100    50    50    cross 
                sb_4__0_             sb_3__0_   880   100    50    50    cross 
                sb_5__0_             sb_3__0_  1080   100    50    50    cross 
                sb_6__0_             sb_3__0_  1280   100    50    50    cross 
                sb_3__1_             sb_3__1_   680   280    50    50    cross 
                sb_3__2_             sb_3__1_   680   480    50    50    cross 
                sb_3__3_             sb_3__1_   680   680    50    50    cross 
                sb_3__4_             sb_3__1_   680   880    50    50    cross 
                sb_3__5_             sb_3__1_   680  1080    50    50    cross 
                sb_3__6_             sb_3__1_   680  1280    50    50    cross 
                sb_3__7_             sb_3__1_   680  1480    50    50    cross 
                sb_4__1_             sb_3__1_   880   280    50    50    cross 
                sb_4__2_             sb_3__1_   880   480    50    50    cross 
                sb_4__3_             sb_3__1_   880   680    50    50    cross 
                sb_4__4_             sb_3__1_   880   880    50    50    cross 
                sb_4__5_             sb_3__1_   880  1080    50    50    cross 
                sb_4__6_             sb_3__1_   880  1280    50    50    cross 
                sb_4__7_             sb_3__1_   880  1480    50    50    cross 
                sb_5__1_             sb_3__1_  1080   280    50    50    cross 
                sb_5__2_             sb_3__1_  1080   480    50    50    cross 
                sb_5__3_             sb_3__1_  1080   680    50    50    cross 
                sb_5__4_             sb_3__1_  1080   880    50    50    cross 
                sb_5__5_             sb_3__1_  1080  1080    50    50    cross 
                sb_5__6_             sb_3__1_  1080  1280    50    50    cross 
                sb_5__7_             sb_3__1_  1080  1480    50    50    cross 
                sb_6__1_             sb_3__1_  1280   280    50    50    cross 
                sb_6__2_             sb_3__1_  1280   480    50    50    cross 
                sb_6__3_             sb_3__1_  1280   680    50    50    cross 
                sb_6__4_             sb_3__1_  1280   880    50    50    cross 
                sb_6__5_             sb_3__1_  1280  1080    50    50    cross 
                sb_6__6_             sb_3__1_  1280  1280    50    50    cross 
                sb_6__7_             sb_3__1_  1280  1480    50    50    cross 
                sb_3__8_             sb_3__8_   680  1680    50    50    cross 
                sb_4__8_             sb_3__8_   880  1680    50    50    cross 
                sb_5__8_             sb_3__8_  1080  1680    50    50    cross 
                sb_6__8_             sb_3__8_  1280  1680    50    50    cross 
                sb_8__0_             sb_8__0_  1680   100    50    50    cross 
                sb_8__1_             sb_8__1_  1700   280    50    50    cross 
                sb_8__3_             sb_8__1_  1700   680    50    50    cross 
                sb_8__5_             sb_8__1_  1700  1080    50    50    cross 
                sb_8__7_             sb_8__1_  1700  1480    50    50    cross 
                sb_8__2_             sb_8__2_  1680   480    50    50    cross 
                sb_8__4_             sb_8__2_  1680   880    50    50    cross 
                sb_8__6_             sb_8__2_  1680  1280    50    50    cross 
                sb_8__8_             sb_8__8_  1680  1680    50    50    cross 
               cbx_1__1_            cbx_1__1_   180   300   100    60       -- 
               cbx_1__2_            cbx_1__1_   180   500   100    60       -- 
               cbx_1__3_            cbx_1__1_   180   700   100    60       -- 
               cbx_1__4_            cbx_1__1_   180   900   100    60       -- 
               cbx_1__5_            cbx_1__1_   180  1100   100    60       -- 
               cbx_1__6_            cbx_1__1_   180  1300   100    60       -- 
               cbx_1__7_            cbx_1__1_   180  1500   100    60       -- 
               cbx_3__1_            cbx_1__1_   580   300   100    60       -- 
               cbx_3__2_            cbx_1__1_   580   500   100    60       -- 
               cbx_3__3_            cbx_1__1_   580   700   100    60       -- 
               cbx_3__4_            cbx_1__1_   580   900   100    60       -- 
               cbx_3__5_            cbx_1__1_   580  1100   100    60       -- 
               cbx_3__6_            cbx_1__1_   580  1300   100    60       -- 
               cbx_3__7_            cbx_1__1_   580  1500   100    60       -- 
               cbx_4__1_            cbx_1__1_   780   300   100    60       -- 
               cbx_4__2_            cbx_1__1_   780   500   100    60       -- 
               cbx_4__3_            cbx_1__1_   780   700   100    60       -- 
               cbx_4__4_            cbx_1__1_   780   900   100    60       -- 
               cbx_4__5_            cbx_1__1_   780  1100   100    60       -- 
               cbx_4__6_            cbx_1__1_   780  1300   100    60       -- 
               cbx_4__7_            cbx_1__1_   780  1500   100    60       -- 
               cbx_5__1_            cbx_1__1_   980   300   100    60       -- 
               cbx_5__2_            cbx_1__1_   980   500   100    60       -- 
               cbx_5__3_            cbx_1__1_   980   700   100    60       -- 
               cbx_5__4_            cbx_1__1_   980   900   100    60       -- 
               cbx_5__5_            cbx_1__1_   980  1100   100    60       -- 
               cbx_5__6_            cbx_1__1_   980  1300   100    60       -- 
               cbx_5__7_            cbx_1__1_   980  1500   100    60       -- 
               cbx_6__1_            cbx_1__1_  1180   300   100    60       -- 
               cbx_6__2_            cbx_1__1_  1180   500   100    60       -- 
               cbx_6__3_            cbx_1__1_  1180   700   100    60       -- 
               cbx_6__4_            cbx_1__1_  1180   900   100    60       -- 
               cbx_6__5_            cbx_1__1_  1180  1100   100    60       -- 
               cbx_6__6_            cbx_1__1_  1180  1300   100    60       -- 
               cbx_6__7_            cbx_1__1_  1180  1500   100    60       -- 
               cbx_7__1_            cbx_1__1_  1380   300   100    60       -- 
               cbx_7__2_            cbx_1__1_  1380   500   100    60       -- 
               cbx_7__3_            cbx_1__1_  1380   700   100    60       -- 
               cbx_7__4_            cbx_1__1_  1380   900   100    60       -- 
               cbx_7__5_            cbx_1__1_  1380  1100   100    60       -- 
               cbx_7__6_            cbx_1__1_  1380  1300   100    60       -- 
               cbx_7__7_            cbx_1__1_  1380  1500   100    60       -- 
               cbx_2__2_            cbx_2__2_   380   500   100    60       -- 
               cbx_2__4_            cbx_2__2_   380   900   100    60       -- 
               cbx_2__6_            cbx_2__2_   380  1300   100    60       -- 
               cbx_8__2_            cbx_2__2_  1580   500   100    60       -- 
               cbx_8__4_            cbx_2__2_  1580   900   100    60       -- 
               cbx_8__6_            cbx_2__2_  1580  1300   100    60       -- 
               cby_1__1_            cby_1__1_   300   180    60   100       -- 
               cby_1__2_            cby_1__1_   300   380    60   100       -- 
               cby_1__3_            cby_1__1_   300   580    60   100       -- 
               cby_1__4_            cby_1__1_   300   780    60   100       -- 
               cby_1__5_            cby_1__1_   300   980    60   100       -- 
               cby_1__6_            cby_1__1_   300  1180    60   100       -- 
               cby_1__7_            cby_1__1_   300  1380    60   100       -- 
               cby_1__8_            cby_1__1_   300  1580    60   100       -- 
               cby_7__1_            cby_1__1_  1500   180    60   100       -- 
               cby_7__2_            cby_1__1_  1500   380    60   100       -- 
               cby_7__3_            cby_1__1_  1500   580    60   100       -- 
               cby_7__4_            cby_1__1_  1500   780    60   100       -- 
               cby_7__5_            cby_1__1_  1500   980    60   100       -- 
               cby_7__6_            cby_1__1_  1500  1180    60   100       -- 
               cby_7__7_            cby_1__1_  1500  1380    60   100       -- 
               cby_7__8_            cby_1__1_  1500  1580    60   100       -- 
               cby_2__1_            cby_2__1_   500   180    60   100       -- 
               cby_2__2_            cby_2__1_   500   380    60   100       -- 
               cby_2__3_            cby_2__1_   500   580    60   100       -- 
               cby_2__4_            cby_2__1_   500   780    60   100       -- 
               cby_2__5_            cby_2__1_   500   980    60   100       -- 
               cby_2__6_            cby_2__1_   500  1180    60   100       -- 
               cby_2__7_            cby_2__1_   500  1380    60   100       -- 
               cby_2__8_            cby_2__1_   500  1580    60   100       -- 
               cby_3__1_            cby_3__1_   700   180    60   100       -- 
               cby_3__2_            cby_3__1_   700   380    60   100       -- 
               cby_3__3_            cby_3__1_   700   580    60   100       -- 
               cby_3__4_            cby_3__1_   700   780    60   100       -- 
               cby_3__5_            cby_3__1_   700   980    60   100       -- 
               cby_3__6_            cby_3__1_   700  1180    60   100       -- 
               cby_3__7_            cby_3__1_   700  1380    60   100       -- 
               cby_3__8_            cby_3__1_   700  1580    60   100       -- 
               cby_4__1_            cby_3__1_   900   180    60   100       -- 
               cby_4__2_            cby_3__1_   900   380    60   100       -- 
               cby_4__3_            cby_3__1_   900   580    60   100       -- 
               cby_4__4_            cby_3__1_   900   780    60   100       -- 
               cby_4__5_            cby_3__1_   900   980    60   100       -- 
               cby_4__6_            cby_3__1_   900  1180    60   100       -- 
               cby_4__7_            cby_3__1_   900  1380    60   100       -- 
               cby_4__8_            cby_3__1_   900  1580    60   100       -- 
               cby_5__1_            cby_3__1_  1100   180    60   100       -- 
               cby_5__2_            cby_3__1_  1100   380    60   100       -- 
               cby_5__3_            cby_3__1_  1100   580    60   100       -- 
               cby_5__4_            cby_3__1_  1100   780    60   100       -- 
               cby_5__5_            cby_3__1_  1100   980    60   100       -- 
               cby_5__6_            cby_3__1_  1100  1180    60   100       -- 
               cby_5__7_            cby_3__1_  1100  1380    60   100       -- 
               cby_5__8_            cby_3__1_  1100  1580    60   100       -- 
               cby_6__1_            cby_3__1_  1300   180    60   100       -- 
               cby_6__2_            cby_3__1_  1300   380    60   100       -- 
               cby_6__3_            cby_3__1_  1300   580    60   100       -- 
               cby_6__4_            cby_3__1_  1300   780    60   100       -- 
               cby_6__5_            cby_3__1_  1300   980    60   100       -- 
               cby_6__6_            cby_3__1_  1300  1180    60   100       -- 
               cby_6__7_            cby_3__1_  1300  1380    60   100       -- 
               cby_6__8_            cby_3__1_  1300  1580    60   100       -- 
               cby_0__1_            cby_0__1_   100   180    60   100       -- 
               cby_0__2_            cby_0__1_   100   380    60   100       -- 
               cby_0__3_            cby_0__1_   100   580    60   100       -- 
               cby_0__4_            cby_0__1_   100   780    60   100       -- 
               cby_0__5_            cby_0__1_   100   980    60   100       -- 
               cby_0__6_            cby_0__1_   100  1180    60   100       -- 
               cby_0__7_            cby_0__1_   100  1380    60   100       -- 
               cby_0__8_            cby_0__1_   100  1580    60   100       -- 
               cbx_1__8_            cbx_1__8_   180  1700   100    60       -- 
               cbx_3__8_            cbx_1__8_   580  1700   100    60       -- 
               cbx_4__8_            cbx_1__8_   780  1700   100    60       -- 
               cbx_5__8_            cbx_1__8_   980  1700   100    60       -- 
               cbx_6__8_            cbx_1__8_  1180  1700   100    60       -- 
               cbx_7__8_            cbx_1__8_  1380  1700   100    60       -- 
               cbx_2__8_            cbx_2__8_   380  1700   100    60       -- 
               cbx_8__8_            cbx_2__8_  1580  1700   100    60       -- 
               cby_8__8_            cby_8__1_  1700  1580    60   100       -- 
               cby_8__7_            cby_8__1_  1700  1380    60   100       -- 
               cby_8__6_            cby_8__1_  1700  1180    60   100       -- 
               cby_8__5_            cby_8__1_  1700   980    60   100       -- 
               cby_8__4_            cby_8__1_  1700   780    60   100       -- 
               cby_8__3_            cby_8__1_  1700   580    60   100       -- 
               cby_8__2_            cby_8__1_  1700   380    60   100       -- 
               cby_8__1_            cby_8__1_  1700   180    60   100       -- 
               cbx_8__0_            cbx_2__0_  1580   100   100    60       -- 
               cbx_2__0_            cbx_2__0_   380   100   100    60       -- 
               cbx_7__0_            cbx_1__0_  1380   100   100    60       -- 
               cbx_6__0_            cbx_1__0_  1180   100   100    60       -- 
               cbx_5__0_            cbx_1__0_   980   100   100    60       -- 
               cbx_4__0_            cbx_1__0_   780   100   100    60       -- 
               cbx_3__0_            cbx_1__0_   580   100   100    60       -- 
               cbx_1__0_            cbx_1__0_   180   100   100    60       -- 






|

.. code-block:: default


    import glob
    import logging
    import tempfile

    import spydrnet as sdn
    from spydrnet_physical.util import (FloorPlanViz, FPGAGridGen,
                                        GridFloorplanGen, OpenFPGA,
                                        initial_placement)

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(LOG_LEVEL='INFO')

    PROP = "VERILOG.InlineConstraints"


    CBX_COLOR = '#d9d9f3'
    CBY_COLOR = '#a8d0db'
    SB_COLOR = '#ceefe4'
    GRID_COLOR = '#ddd0b1'
    HETERO_COLOR = '#6E6858'


    def main():
        proj = "../hetrogeneous_fabric/"
        source_files = glob.glob(f'{proj}/*_Verilog/lb/*.v')
        source_files += glob.glob(f'{proj}/*_Verilog/routing/*.v')
        source_files += glob.glob(f'{proj}/*_Verilog/sub_module/*.v')
        source_files += glob.glob(f'{proj}/*_Verilog/fpga_top.v')

        # Temporary fix to read multiple verilog files
        with tempfile.NamedTemporaryFile(suffix=".v") as fp:
            for eachV in source_files:
                with open(eachV, "r") as fpv:
                    fp.write(str.encode(" ".join(fpv.readlines())))
            fp.seek(0)
            netlist = sdn.parse(fp.name)

        fpga = OpenFPGA(grid=(8, 8), netlist=netlist)

        # Convert wires to bus structure
        fpga.create_grid_clb_bus()
        fpga.create_grid_io_bus()
        fpga.create_sb_bus()
        fpga.create_cb_bus()
        fpga.merge_all_grid_ios()
        fpga.design_top_stat()
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        #           Floorplan visualization
        # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

        fpga_grid = FPGAGridGen(design_name='FPGA8x8', layout="8x8",
                                arch_file=f"{proj}/FPGA88_hetero_Task/arch/k6_N10_tileable.xml",
                                release_root=None)
        fpga_grid.enumerate_grid()
        fpga.load_grid(fpga_grid)

        # = = = = = = = = = = = = = = = = = = = = = = =
        #         Shaping Information
        # = = = = = = = = = = = = = = = = = = = = = = =
        GRID_X, GRID_Y = 200, 200
        CLB_W, CLB_H = 140, 140
        CBX_WIDTH, CBY_HEIGHT = 100, 100

        # Derived varaiable
        CBY_WIDTH = GRID_X-CLB_W
        CBX_HEIGHT = GRID_Y-CLB_H

        # Edge blocks dimensions
        LEFT_CBY_WIDTH, LEFT_CBY_HEIGHT = CBY_WIDTH, CBY_HEIGHT
        RIGHT_CBY_WIDTH, RIGHT_CBY_HEIGHT = CBY_WIDTH, CBY_HEIGHT
        TOP_CBX_WIDTH, TOP_CBX_HEIGHT = CBX_WIDTH, CBX_HEIGHT
        BOTTOM_CBX_WIDTH, BOTTOM_CBX_HEIGHT = CBX_WIDTH, CBX_HEIGHT

        # Margins
        CLB_MARG_L, CLB_MARG_R, CLB_MARG_T, CLB_MARG_B = 0, 0, 0, 0
        CBX_MARG_L, CBX_MARG_R, CBX_MARG_T, CBX_MARG_B = 0, 0, 0, 0
        CBY_MARG_L, CBY_MARG_R, CBY_MARG_T, CBY_MARG_B = 0, 0, 0, 0

        # SB_1__1_ Dimensions
        a, b, c, d, e, f = [CBX_HEIGHT, 0.5*(CLB_W-CBX_WIDTH),
                            0.5*(CLB_H-CBY_HEIGHT), CBY_WIDTH,
                            0.5*(CLB_W-CBX_WIDTH), 0.5*(CLB_H-CBY_HEIGHT)]

        module_shapes = {
            "cbx_1__0_": {"W": BOTTOM_CBX_WIDTH, "H": BOTTOM_CBX_HEIGHT},
            "cbx_1__1_": {"W": CBX_WIDTH, "H": CBX_HEIGHT},
            "cbx_1__8_": {"W": TOP_CBX_WIDTH, "H": TOP_CBX_HEIGHT},
            "cbx_2__0_": {"W": CBX_WIDTH, "H": CBX_HEIGHT},
            "cbx_2__2_": {"W": CBX_WIDTH, "H": CBX_HEIGHT},
            "cbx_2__8_": {"W": CBX_WIDTH, "H": CBX_HEIGHT},
            "cby_0__1_": {"W": LEFT_CBY_WIDTH, "H": LEFT_CBY_HEIGHT},
            "cby_1__1_": {"W": CBY_WIDTH, "H": CBY_HEIGHT},
            "cby_2__1_": {"W": CBY_WIDTH, "H": CBY_HEIGHT},
            "cby_3__1_": {"W": CBY_WIDTH, "H": CBY_HEIGHT},
            "cby_8__1_": {"W": RIGHT_CBY_WIDTH, "H": RIGHT_CBY_HEIGHT},
            "grid_clb": {"W": CLB_W, "H": CLB_H},
            "grid_mult_8": {"W": CLB_W, "H": GRID_Y+CLB_H},
            "sb_0__0_": {"SHAPE": "cross", "POINTS": [a, 0, c, d, e, 0]},
            "sb_0__1_": {"SHAPE": "cross", "POINTS": [a, 0, c, d, e, f]},
            "sb_0__8_": {"SHAPE": "cross", "POINTS": [a, 0, 0, d, e, f]},
            "sb_1__0_": {"SHAPE": "cross", "POINTS": [a, b, c, d, e, 0]},
            "sb_1__1_": {"SHAPE": "cross", "POINTS": [a, b, c, d, 0, f]},
            "sb_1__2_": {"SHAPE": "cross", "POINTS": [a, b, c, d, e, f]},
            "sb_1__8_": {"SHAPE": "cross", "POINTS": [a, b, 0, d, e, f]},
            "sb_2__0_": {"SHAPE": "cross", "POINTS": [a, b, c, d, e, 0]},
            "sb_2__1_": {"SHAPE": "cross", "POINTS": [a, 0, c, d, e, f]},
            "sb_2__2_": {"SHAPE": "cross", "POINTS": [a, b, c, d, e, f]},
            "sb_2__8_": {"SHAPE": "cross", "POINTS": [a, b, 0, d, e, f]},
            "sb_3__0_": {"SHAPE": "cross", "POINTS": [a, b, c, d, e, 0]},
            "sb_3__1_": {"SHAPE": "cross", "POINTS": [a, b, c, d, e, f]},
            "sb_3__8_": {"SHAPE": "cross", "POINTS": [a, b, 0, d, e, f]},
            "sb_8__0_": {"SHAPE": "cross", "POINTS": [a, b, c, d, 0, 0]},
            "sb_8__1_": {"SHAPE": "cross", "POINTS": [a, 0, c, d, 0, f]},
            "sb_8__2_": {"SHAPE": "cross", "POINTS": [a, b, c, d, 0, f]},
            "sb_8__8_": {"SHAPE": "cross", "POINTS": [a, b, 0, d, 0, f]},
        }

        for eachm, param in module_shapes.items():
            if param:
                module = next(fpga.top_module.get_definitions(eachm))
                if "SHAPE" in param.keys():
                    module.data[PROP]["SHAPE"] = param["SHAPE"]
                    module.data[PROP]["POINTS"] = param["POINTS"]
                else:
                    module.data[PROP]["WIDTH"] = param["W"]
                    module.data[PROP]["HEIGHT"] = param["H"]

            print(eachm, param)

        # Create grid plan
        grid_plan = GridFloorplanGen(17, 17, grid_x=200, grid_y=200)

        grid_plan.offset_x = 100
        grid_plan.offset_y = 100

        for i in range(2, 17+1, 2):
            grid_plan.set_column_width(i, CLB_W)

        for i in range(2, 17+1, 2):
            grid_plan.set_row_height(i, CLB_H)

        for i in range(1, 17+1, 2):
            grid_plan.set_column_width(i, CBY_WIDTH)

        for i in range(1, 17+1, 2):
            grid_plan.set_row_height(i, CBX_HEIGHT)

        # # # dwg = grid_plan.render_grid()
        # # # dwg.saveas("_fpga_grid_floorplan.svg", pretty=True, indent=4)
        fpga_grid.print_grid()
        with open("_complete_metrics.txt", "w") as fp:
            for y in range(2*(fpga_grid.height-1), -1, -1):
                for x in range((fpga_grid.width*2)-1):
                    fp.write(" {0:^12} ".format(fpga_grid.get_top_instance(x, y)))
                fp.write("\n")

        for xi in range((2*fpga_grid.width)-3, 0, -1):
            for yi in range((2*fpga_grid.height)-3, 0, -1):
                X_OFFSET, Y_OFFSET = 0, 0
                inst_name = fpga_grid.get_top_instance(xi, yi)
                points = grid_plan.get_x_y(xi-1, yi-1)
                inst = next(fpga.top_module.get_instances(f"*{inst_name}"))
                if "cbx" in inst_name:
                    X_OFFSET, Y_OFFSET = 0.5*(CLB_W-CBX_WIDTH), 0
                if "cby" in inst_name:
                    X_OFFSET, Y_OFFSET = 0, 0.5*(CLB_H-CBY_HEIGHT)
                if "sb" in inst_name:
                    PTS = inst.reference.data[PROP]["POINTS"]
                    X_OFFSET, Y_OFFSET = PTS[1]*-1, PTS[-1]*-1
                inst.data[PROP]['LOC_X'] = points[0] + X_OFFSET
                inst.data[PROP]['LOC_Y'] = points[1] + Y_OFFSET

        # # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        # #           Adjust Floorplan
        # # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        for cbx in fpga.top_module.get_definitions("cbx_*"):
            cbx.data[PROP]["COLOR"] = CBX_COLOR

        for cby in fpga.top_module.get_definitions("cby_*"):
            cby.data[PROP]["COLOR"] = CBY_COLOR

        for sb in fpga.top_module.get_definitions("sb_*"):
            sb.data[PROP]["COLOR"] = SB_COLOR

        clb: sdn.Definition = next(fpga.top_module.get_definitions("grid_clb"))
        clb.data[PROP]["COLOR"] = GRID_COLOR

        mult8: sdn.Definition = next(fpga.top_module.get_definitions("*mult*"))
        mult8.data[PROP]["COLOR"] = HETERO_COLOR

        # # = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
        fpga.show_placement_data("*")
        # # fpga.design_top_stat()

        fpga.top_module.data[PROP]["WIDTH"] = 1900
        fpga.top_module.data[PROP]["HEIGHT"] = 1900

        fp = FloorPlanViz(fpga.top_module)
        fp.compose(skip_connections=True, skip_pins=True)
        dwg = fp.get_svg()
        dwg.add(grid_plan.render_grid(return_group=True))
        dwg.saveas("_hetero_design_floorplan.svg", pretty=True, indent=4)


    if __name__ == "__main__":
        main()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.528 seconds)


.. _sphx_glr_download_auto_openfpga_basic_07_FloorplanHeterogeneousDesign01.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 07_FloorplanHeterogeneousDesign01.py <07_FloorplanHeterogeneousDesign01.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 07_FloorplanHeterogeneousDesign01.ipynb <07_FloorplanHeterogeneousDesign01.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
