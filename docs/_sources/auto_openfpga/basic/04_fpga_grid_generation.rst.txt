
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_openfpga/basic/04_fpga_grid_generation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_openfpga_basic_04_fpga_grid_generation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_openfpga_basic_04_fpga_grid_generation.py:


===========================
FPGA Layout grid generation
===========================

This class generates the 2D matrix of the FPGA grid.


**layout section of Architecture file**


.. program-output:: bash -c "xmllint --format --xpath '//layout' ../../examples/OpenFPGA/basic/support_files/vpr_arch_render_demo.xml > ./auto_prog_output/arch_layout_snnipet.xml"


.. literalinclude:: ../../auto_prog_output/arch_layout_snnipet.xml
   :language: xml


**Expected Output**:

.. code-block:: text

    EMPTY     io_top     io_top     io_top     io_top     io_top     io_top     EMPTY
    io_left     clb        clb        clb        clb        clb        clb      io_right
    io_left     clb        clb        clb        clb        clb        clb      io_right
    io_left    ram9k                 ram9k                 ram9k                io_right
    io_left     clb        clb        clb        clb        clb        clb      io_right
    io_left     dsp                   dsp                   dsp                 io_right
    io_left     clb        clb        clb        clb        clb        clb      io_right
    EMPTY   io_bottom  io_bottom  io_bottom  io_bottom  io_bottom  io_bottom    EMPTY


.. literalinclude:: ../../../../examples/OpenFPGA/basic/_complete_grid_metrics.txt


.. literalinclude:: ../../../../examples/OpenFPGA/basic/_complete_metrics.txt

.. GENERATED FROM PYTHON SOURCE LINES 40-77




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

      EMPTY      io_top     io_top     io_top     io_top     io_top     io_top     EMPTY    
     io_left      clb        clb        clb        clb        clb        clb      io_right  
     io_left      clb        clb        clb        clb        clb        clb      io_right  
     io_left      clb        clb        clb        clb        clb        clb      io_right  
     io_left      clb        clb        clb        clb        clb        clb      io_right  
     io_left     ram9k       clb        clb        clb        clb        clb      io_right  
     io_left      clb        clb        clb        clb        clb        clb      io_right  
      EMPTY    io_bottom  io_bottom  io_bottom  io_bottom  io_bottom  io_bottom    EMPTY    






|

.. code-block:: default


    import logging

    import spydrnet as sdn
    from spydrnet_physical.util import FPGAGridGen

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(LOG_LEVEL='INFO')


    def main():
        fpga = FPGAGridGen(design_name="example_design",
                           arch_file="./support_files/vpr_arch_render_demo.xml",
                           release_root="_release",
                           layout="dp")
        fpga.enumerate_grid()
        # Print CLB Grid
        fpga.print_grid()

        # Complete Matrics
        with open("_complete_grid_metrics.txt", "w") as fp:
            for y in range(fpga.height-1, -1, -1):
                for x in range(fpga.width):
                    fp.write("{0:^18}".format("[%s]" % " ".join(
                        map(str, fpga.get_block(x, y)))))
                fp.write("\n")

        # Complete metrics
        with open("_complete_metrics.txt", "w") as fp:
            for y in range(2*(fpga.height-1), -1, -1):
                for x in range((fpga.width*2)-1):
                    fp.write(" {0:^12} ".format(fpga.get_top_instance(x, y)))
                fp.write("\n")


    if __name__ == "__main__":
        main()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.003 seconds)


.. _sphx_glr_download_auto_openfpga_basic_04_fpga_grid_generation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 04_fpga_grid_generation.py <04_fpga_grid_generation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 04_fpga_grid_generation.ipynb <04_fpga_grid_generation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
