
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_basic/group_ungroup_cells.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_basic_group_ungroup_cells.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_basic_group_ungroup_cells.py:


=========================
Grouping ungrouping cells
=========================

This example demostrates how to generate a feedthrough wire connection for
a given scalar or vector wires.

.. hdl-diagram:: ../../../examples/basic/_initial_design.v
   :type: netlistsvg
   :align: center
   :module: top


**Output1** ungrouped module

.. hdl-diagram:: ../../../examples/basic/_ungrouped_design.v
   :type: netlistsvg
   :align: center
   :module: top

.. GENERATED FROM PYTHON SOURCE LINES 23-43




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <class 'spydrnet.ir.Instance'; name 'inst_1_0_module2_0'; parent definition.name 'top'; reference definition.name 'module2'>
    <class 'spydrnet.ir.Instance'; name 'inst_1_0_module2_1'; parent definition.name 'top'; reference definition.name 'module2'>
    <class 'spydrnet.ir.Instance'; name 'inst_1_1_module2_0'; parent definition.name 'top'; reference definition.name 'module2'>
    <class 'spydrnet.ir.Instance'; name 'inst_1_1_module2_1'; parent definition.name 'top'; reference definition.name 'module2'>






|

.. code-block:: default


    from os import path
    import spydrnet as sdn
    import spydrnet_physical as sdnphy
    import logging

    logger = logging.getLogger('spydrnet_logs')
    sdn.enable_file_logging(LOG_LEVEL='INFO')

    netlist = sdnphy.load_netlist_by_name('nested_hierarchy')
    sdn.compose(netlist, '_initial_design.v', skip_constraints=True)

    netlist = sdnphy.load_netlist_by_name('nested_hierarchy')
    top = netlist.top_instance.reference
    inst = next(top.get_instances("inst_1_0"))
    top.flatten_instance(inst)
    inst = next(top.get_instances("inst_1_1"))
    top.flatten_instance(inst)
    top.create_unconn_wires()
    sdn.compose(netlist, '_ungrouped_design.v', skip_constraints=True)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.014 seconds)


.. _sphx_glr_download_auto_basic_group_ungroup_cells.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: group_ungroup_cells.py <group_ungroup_cells.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: group_ungroup_cells.ipynb <group_ungroup_cells.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
