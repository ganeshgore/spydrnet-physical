:orphan:

.. _sec:clock_tree_embedding:

Clock Tree Embedding
=====================

A collection of examples to introduce the functionality, 
features, and uses of SpyDrNet.



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate how to genrate different connection pattern for routing global signals. By default this library support basic fishbone and HTree patterns, which can be extended to create desired connectivity usng transformations like rotate, transalate, margin, merge, scale and sample">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_01_connection_patterns_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_01_connection_patterns.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Connection Pattern Generation</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrate how to genrate different connection pattern for routing global signals. By default this library support basic fishbone and HTree patterns, which can be extended to create desired connectivity usng transformations like rotate, transalate, margin, merge, scale and sample">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_02_create_simple_htree_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_02_create_simple_htree.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Create H-Tree Connectivity pattern</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demostrate how to create hybrid connetivity pattern for any  arbitrary (non square ) tiles.">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_03_create_hybrid_htree_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_03_create_hybrid_htree.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Create Hybrid Connectivity Pattern</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Original grided netlist">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_04_5_adding_buffers_on_clockpath_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_04_5_adding_buffers_on_clockpath.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Create Clock Tree Embedding</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Original grided netlist">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_04_embed_clock_tree_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_04_embed_clock_tree.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Create Clock Tree Embedding</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates how to insert H-Tree in tileable FPGA grid.">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_05_embed_clock_tree_fpga44_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_05_embed_clock_tree_fpga44.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Two layer H-Tree insertion in 4x4 FPGA</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="THis example">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_06_connection_pattern_tie_cell_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_06_connection_pattern_tie_cell.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Adding Tie Cells on Floating Pins</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Create Reset Feedthrough in fpga_top">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_06_reset_feedthrough_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_06_reset_feedthrough.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Create Reset Feedthrough in fpga_top</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="16x16 Square homogeneous fabric design">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_07_clock_tree_example1_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_07_clock_tree_example1.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Clock tree insertion Example Architecture 1</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="16x24 rectangular homogeneous fabric design">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_08_clock_tree_example2_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_08_clock_tree_example2.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Clock tree insertion Example Architecture 2</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="9x12 odd row/column homogeneous fabric design">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_09_clock_tree_example3_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_09_clock_tree_example3.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Clock tree insertion Example Architecture 3</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Square heterogenous design">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_09_clock_tree_example4_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_09_clock_tree_example4.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Clock tree insertion Example Architecture 3</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example is for creating Htree for 6x9 fabric. Our main constraints for clocktrees are to connect all the CLBs to the lowest level of Htree to have same clock delays to each cell.">

.. only:: html

  .. image:: /auto_openfpga_clock_tree/images/thumb/sphx_glr_10_6x9_htree_thumb.png
    :alt:

  :ref:`sphx_glr_auto_openfpga_clock_tree_10_6x9_htree.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Grouping ungrouping cells</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /auto_openfpga_clock_tree/01_connection_patterns
   /auto_openfpga_clock_tree/02_create_simple_htree
   /auto_openfpga_clock_tree/03_create_hybrid_htree
   /auto_openfpga_clock_tree/04_5_adding_buffers_on_clockpath
   /auto_openfpga_clock_tree/04_embed_clock_tree
   /auto_openfpga_clock_tree/05_embed_clock_tree_fpga44
   /auto_openfpga_clock_tree/06_connection_pattern_tie_cell
   /auto_openfpga_clock_tree/06_reset_feedthrough
   /auto_openfpga_clock_tree/07_clock_tree_example1
   /auto_openfpga_clock_tree/08_clock_tree_example2
   /auto_openfpga_clock_tree/09_clock_tree_example3
   /auto_openfpga_clock_tree/09_clock_tree_example4
   /auto_openfpga_clock_tree/10_6x9_htree


.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-gallery

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download all examples in Python source code: auto_openfpga_clock_tree_python.zip </auto_openfpga_clock_tree/auto_openfpga_clock_tree_python.zip>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download all examples in Jupyter notebooks: auto_openfpga_clock_tree_jupyter.zip </auto_openfpga_clock_tree/auto_openfpga_clock_tree_jupyter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
